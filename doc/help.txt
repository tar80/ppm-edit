Enhanced editing functions

Author: tar80 <tar80master@google.com>
License: MIT License
Repository: https://github.com/tar80/ppm-edit
===============================================================================

PPxの編集機能を強化します。

・Emacsのようなカーソル移動キー
・選択範囲2ストロークキー
・選択範囲の文字列をテーブル(プロパティ)名と見立てて%*getcust()で詳細を取得
・選択範囲の文字列をコマンドとして実行
・"編集して取込"上でPPx設定情報を補完候補として抽出
・参照中の履歴情報を全削除
・テンプレートを用いた新規ファイルの作成

===============================================================================
動作環境

	PPx message moduleが必須。
	設定情報の取得コマンドを使う場合は、grep.exeまたはripgrep.exeを
	用意する必要があります。

===============================================================================
構成ファイルの説明

	dist\deleteHistory.js	参照中のヒストリ履歴を全削除
	dist\createNewFile.js	新規ファイルを作成しテンプレートを挿入
	dist\expandMacro.js	選択範囲の文字列をマクロとして展開
	bin\make_templatelist.exe
		テンプレート名を記述した補完リストを作成
		中身はjluaでexe化したlua script

===============================================================================
テーブル情報

	K_ppmEdit	選択範囲2ストロークキー

===============================================================================
デフォルトキー設定 ※()で括られたキーはコメントアウト

	PPc
		Ctrl+Shift+E	テンプレートの作成
		Ctrl+Shift+N	新規ファイルの作成

	一行編集
		Ctrl+A		行頭へ移動
		Ctrl+E		行末へ移動

	PPe・一行編集
		Ctrl+Shift+:	選択したテキストをコマンドとして実行
		Ctrl+Shift+@	選択したテキストを%*getcust()
		Ctrl+Shit+D	参照中の履歴情報を全削除
		Ctrl+Shift+A	全選択
		Ctrl+5		選択範囲の文字列をマクロとして展開
		Ctrl+A		行頭へ移動
		Ctrl+E		行末へ移動
		Ctrl+B		ひとつ前の文字
		Ctrl+F		ひとつ後ろの文字
		Ctrl+W		前方の文字を削除
		Ctrl+K		後方の文字を削除
		Ctrl+N		補完リストを下へ移動
		Ctrl+P		補完リストを上へ移動
		Ctrl+[		補完リストを閉じる
		Ctrl+;		選択範囲2ストローク開始キー
			A	全選択
			H	行頭まで選択
			L	行末まで選択
			J	最後まで選択
			K	最初まで選択
			W	単語選択
			\	パス区切り間を選択("\" or "/")
			'	'で挟まれた範囲
			"	"で挟まれた範囲
			,	,で区切られた範囲
			;	行選択

	PPcust
		F12		PPx設定情報を挿入
===============================================================================
テンプレート機能

	新規ファイル作成時にテンプレートを適用します。

	1. 指定キー(Ctrl+Shift+E)を入力するとテンプレート作成用一行編集が起動
		・テンプレートの書式: name.ext
			・nameにはテンプレートの名前を指定
			・extにはテンプレートを適用するファイルの拡張子を指定
			例) template.cfg
		・完成したテンプレートは"<cache>\template\filetype"に保存される

	2. テンプレートの記述に制限はないが、";#=<コメント>"と記述された行が
	  あれば、新規ファイル編集時にその行にカーソル移動する
	  <コメント>にはそのテンプレートの説明を書く
	  例) ;#=設定ファイル用のテンプレート

	3. 指定キー(Ctrl+Shift+N)を入力すると新規ファイル作成用一行編集が起動
		・テンプレートを適用するには、
			・最初にファイル名を入力する
			・次に拡張子は入れずにスペースを一つ開け、補完候補から
			  適用するテンプレートを選ぶ
			例) newconfig _template ext=cfg line=3
			_templateはテンプレート名を指し、ext=cfgは拡張子が.cfg
			に設定され、line=3行目から編集が始まる
		・テンプレートを必要としないときは、普通にファイル名を入力する

===============================================================================
vim:tw=79:ts=8:sts=0:sw=4:norl:noet:fen:
