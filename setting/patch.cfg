;ppm-edit
;-------------------------------------------------------------------------------
;;ローカルインストールした場合はプラグインの親ディレクトリパスを指定する(開発者用)
;?repopath = %sgu'ppmrepo'

;;#KC_main
;;FileTypeテンプレート作成キー
$maketemplate = ^\E

;;新規ファイル作成キー
$newfile = ^\N

;;#K_edit
;;編集して取込に設定情報を挿入
$ripgrep = F12
;$grep = F12

;;選択したテキストをコマンドとして実行 [^\V_HBA = ctrl+shit+:]
$execute = ^\V_HBA

;;選択したテキストを%*getcust() [^\V_HC0 = ctrl+shift+@]
$info = ^\V_HC0

;;参照中の履歴情報を全削除
$delhis = ^\D

;;範囲選択2ストローク開始キー [^V_HBB = ctrl+;]
$select = ^V_HBB

;;選択範囲2ストロークキー開始時に表示されるメッセージ
;?selectmsg = *selection*

;;選択範囲を取得するスクリプト(setsel.js)の実行状態を維持するなら1を指定する
;;実行状態の維持は一行編集が終了するまで
;?staymode = 1

;;#K_ppmEdit(2ストロークキー)
;;行頭まで選択
$head = H

;;行末まで選択
$end = L

;;ファイル末まで選択
$behind = J

;;ファイル頭まで選択
$forward = K

;;単語選択(空白に挟まれた範囲)
$ward = W

;;パス区切り間[slash|backslash]を選択
$path = '\'

;;'シングルクォート'で挟まれた範囲
$quote = '''

;;"ダブルクォート"で挟まれた範囲
$dquote = '"'

;;,カンマ,で区切られた範囲
$comma = ','

;;(丸括弧)で括られた範囲
$bra1 = '('

;;[角括弧]で括られた範囲
$bra2 = '['

;;一行選択
$line = ';'

;;全選択
$all = A

[section]
/dist	= %sgu'ppmrepo'\ppm-edit\dist
-K_ppmEdit =
K_lied	= {
;;行移動
^UP	,*cursor -1,0,-1
^DOWN	,*cursor -1,0,1
}
K_edit	= {
^\A	,%K"@^A"
;;Emacs like keys
^A	,*cursor -22
^E	,*cursor -23
^B	,*cursor -1,-1
^F	,*cursor -1,1
;;カーソルが候補リスト上にあるときに、リスト上端/下端へ移動
;^B	,*if 0<%*sendmessage(%N-L,392,0,0)%*editprop(list)%:*cursor -11,-1%:*stop
;	*cursor -1,-1
;^F	,*if 0<%*sendmessage(%N-L,392,0,0)%*editprop(list)%:*cursor -11,1%:*stop
;	*cursor -1,1
^K	,%K"@\DEL@F4"
^W	,%K"@\BS"
;;履歴の上下移動
^N	,*if 0%*editprop(list)||("%W"=="%G"TFEM|0"")%:%K"@DOWN"%:*stop
	%K"@F4"
^P	,*if 0%*editprop(list)||("%W"=="%G"TFEM|0"")%:%K"@UP"%:*stop
	%K"@F4"
;;ctrl+: 一行編集で補完
^V_HBA	,*string o,opts={'title':'Insert String','mode':'%*editprop(history)','module':'off','list':'on','detail':'cmd path'}
	*string o,input=%*script("%sgu'ppmlib'\input.js","%so'opts'")
	*if ("%so'input'"!="[error]")%:*insert %so'input'
;;ctrl+[ 候補一覧を閉じる
^V_HDB	,*completelist -close
;;ctrl+/ 次を検索
^V_HBF	,*find -dialog
;;ctrl+shift+/ 前を検索
^\V_HBF	,*string o,word=%*input(-title:"前を検索" -mode:s)
	*find -back "%so'word'"
;;ctrl+, 検索候補(前)
^V_HBC	,*find -back
;;ctrl+. 検索候補(次)
^V_HBE	,*find
;;ctrl+5	,選択範囲の文字列をマクロとして展開 引数に"1"を付けると展開せずにメッセージ表示
;;有効な文字列: %<文字>(マクロ), u<10進数>(ユニコード), x<16進数>(ユニコード), <文字>_<文字>(テーブル)
^V_H35	,*script "[/dist]\expandMacro.js"
}
[endsection]
;-------------------------------------------------------------------------------
;[linecust]
;[endlinecust]
;-------------------------------------------------------------------------------
;[execute]
;[endexecute]
;-------------------------------------------------------------------------------
; @nameは設定値です。コメントアウト又は空にすることで初期値を適用します
; @nameの値は複数行に記述できます。二行め以降はTAB文字で開始する必要があります
; $nameは設定キーです。コメントアウト又は空にすることでキー設定を無効化できます
; $nameの値は一行に収めてください
; ?nameは設定値です。コメントアウト又は空にすることで初期値を適用します
; ?nameの値は一行に収めてください
; [section]と[endsection]の間には自由に設定を追加できます
; [section]内で追加するテーブル項目は削除時には通常プロパティ単位で削除しますが
;   ID名の頭に"-"を付けるとテーブルごと削除します
;   テーブルの削除のみが目的の場合は"-<ID> ="とします
;   A_xxx,X_xxx,XB_xxx,XC_xxx,XV_xxx,KC_main,KV_mainは削除対象外です
; [section]の冒頭に"/<name> = <value>"が記述されていると[section]内の[/<name>]を
;   <value>に置換します。正規表現を使用しているため<name>にはメタ文字の使用を
;   避け、英数字を使ってください
; [linecust]と[endlinecust]の間には*linecustを設定できます
;   "<label>,<ID[:SubID]><=param|,command>"の形式で記述します
;   複数行の既述はできません
; [execute]と[endexecute]の間にはコマンドを設定できます
;   コマンドはPPx.Execute()にそのまま代入され、*ppmSet実行時に
;   一行ずつ順番に実行されます
;-------------------------------------------------------------------------------
; vim:tw=79:ts=8:sw=8:sts=0:norl:noet:fen:ft=PPxcfg
